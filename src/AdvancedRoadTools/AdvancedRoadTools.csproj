<Project Sdk="Microsoft.NET.Sdk">
  <!-- src/AdvancedRoadTools/AdvancedRoadTools.csproj -->

  <PropertyGroup>
    <Configurations>Debug;Release</Configurations>
    <PublishConfigurationPath>Properties\PublishConfiguration.xml</PublishConfigurationPath>

    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyTitle>Advanced Road Tools</AssemblyTitle>
    <AssemblyName>AdvancedRoadTools</AssemblyName>
    <Product>Advanced Road Tools</Product>

    <Nullable>enable</Nullable>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <IncludeSourceRevisionInInformationalVersion>true</IncludeSourceRevisionInInformationalVersion>
    <DefineConstants>TRACE;DEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>

  <!-- CS2 toolchain (sets net48, refs, analyzers, etc.) -->
  <Import Project="$([System.Environment]::GetEnvironmentVariable('CSII_TOOLPATH', 'EnvironmentVariableTarget.User'))\Mod.props" />
  <Import Project="$([System.Environment]::GetEnvironmentVariable('CSII_TOOLPATH', 'EnvironmentVariableTarget.User'))\Mod.targets" />

  <!-- Ensure UI deps are installed (only if UI/ exists and node_modules doesn't) -->
  <Target Name="NpmInstall" BeforeTargets="Build"
          Condition="Exists('$(ProjectDir)\UI\package.json') AND !Exists('$(ProjectDir)\UI\node_modules')">
    <Exec Command="npm ci" WorkingDirectory="$(ProjectDir)\UI" />
  </Target>

  <!-- Build UI after C# -->
  <Target Name="BuildUI" AfterTargets="AfterBuild" Condition="Exists('$(ProjectDir)\UI\package.json')">
    <Exec Command="npm run build" WorkingDirectory="$(ProjectDir)\UI" />
  </Target>

  <!-- Copy UI folder (except node_modules) into the deploy folder that Mod.targets creates -->
  <Target Name="DeployUI" AfterTargets="DeployWIP" Condition="Exists('$(ProjectDir)\UI\mod.json')">
    <ItemGroup>
      <UiFiles Include="UI\**\*.*" Exclude="UI\node_modules\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(UiFiles)"
          DestinationFiles="@(UiFiles->'$(DeployDir)\%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <ItemGroup>
    <Reference Include="Game"><Private>false</Private></Reference>
    <Reference Include="Colossal.Core"><Private>false</Private></Reference>
    <Reference Include="Colossal.Logging"><Private>false</Private></Reference>
    <Reference Include="Colossal.IO.AssetDatabase"><Private>false</Private></Reference>
    <Reference Include="Colossal.Localization"><Private>false</Private></Reference>
    <Reference Include="Colossal.UI"><Private>false</Private></Reference>
    <Reference Include="Colossal.UI.Binding"><Private>false</Private></Reference>
    <Reference Include="UnityEngine.CoreModule"><Private>false</Private></Reference>
    <Reference Include="UnityEngine.AudioModule"><Private>false</Private></Reference>
    <Reference Include="Unity.Burst"><Private>false</Private></Reference>
    <Reference Include="Unity.Collections"><Private>false</Private></Reference>
    <Reference Include="Unity.Entities"><Private>false</Private></Reference>
    <Reference Include="Unity.Mathematics"><Private>false</Private></Reference>
    <Reference Include="Colossal.Mathematics">
      <HintPath>$(ManagedPath)\Colossal.Mathematics.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <!-- Link the shared toolchain files in Properties/ for visibility -->
  <ItemGroup>
    <None Include="$(ModPropsFile)" Link="Properties\Mod.props" />
    <None Include="$(ModTargetsFile)" Link="Properties\Mod.targets" />
  </ItemGroup>

  <!-- Make UI files visible in VS (optional) -->
  <ItemGroup>
    <None Include="UI\mod.json">
      <Visible>true</Visible>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <!-- keep lang/** copied -->
  <ItemGroup>
    <Folder Include="lang\" />
    <Content Include="lang\**">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
</Project>

<Project Sdk="Microsoft.NET.Sdk">
  <!-- File: src/AdvancedRoadTools/AdvancedRoadTools.csproj -->

  <PropertyGroup>
    <Configurations>Debug;Release</Configurations>
    <PublishConfigurationPath>Properties\PublishConfiguration.xml</PublishConfigurationPath>

    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyTitle>Advanced Road Tools</AssemblyTitle>
    <AssemblyName>AdvancedRoadTools</AssemblyName>
    <Product>Advanced Road Tools</Product>

    <Nullable>enable</Nullable>

    <!-- Node/NPM runner + soft-fail switch for UI build -->
    <NpmCmd>npm</NpmCmd>
    <!-- set to true if you want the whole build to fail when npm fails -->
    <FailUIBuild>false</FailUIBuild>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <IncludeSourceRevisionInInformationalVersion>true</IncludeSourceRevisionInInformationalVersion>
    <DefineConstants>TRACE;DEBUG</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>

  <!-- CS2 toolchain (sets net48, refs, analyzers, etc.) -->
  <Import Project="$([System.Environment]::GetEnvironmentVariable('CSII_TOOLPATH', 'EnvironmentVariableTarget.User'))\Mod.props" />
  <Import Project="$([System.Environment]::GetEnvironmentVariable('CSII_TOOLPATH', 'EnvironmentVariableTarget.User'))\Mod.targets" />

  <ItemGroup>
    <Reference Include="Game"><Private>false</Private></Reference>
    <Reference Include="Colossal.Core"><Private>false</Private></Reference>
    <Reference Include="Colossal.Logging"><Private>false</Private></Reference>
    <Reference Include="Colossal.IO.AssetDatabase"><Private>false</Private></Reference>
    <Reference Include="Colossal.Localization"><Private>false</Private></Reference>
    <Reference Include="Colossal.UI"><Private>false</Private></Reference>
    <Reference Include="Colossal.UI.Binding"><Private>false</Private></Reference>
    <Reference Include="UnityEngine.CoreModule"><Private>false</Private></Reference>
    <Reference Include="UnityEngine.AudioModule"><Private>false</Private></Reference>
    <Reference Include="Unity.Burst"><Private>false</Private></Reference>
    <Reference Include="Unity.Collections"><Private>false</Private></Reference>
    <Reference Include="Unity.Entities"><Private>false</Private></Reference>
    <Reference Include="Unity.Mathematics"><Private>false</Private></Reference>
    <Reference Include="Colossal.Mathematics">
      <HintPath>$(ManagedPath)\Colossal.Mathematics.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>

  <!-- Surface the common toolchain files in Properties/ -->
  <ItemGroup>
    <None Include="$(ModPropsFile)" Link="Properties\Mod.props" />
    <None Include="$(ModTargetsFile)" Link="Properties\Mod.targets" />
  </ItemGroup>

  <!-- Copy UI assets so COUI can find them via coui://AdvancedRoadTools/... -->
  <ItemGroup>
    <Content Include="UI\mod.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="UI\images\**\*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <!-- If your UI build outputs JS/CSS into UI\dist, copy that too -->
    <Content Include="UI\dist\**\*.*" Condition="Exists('UI\dist')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <!-- Ensure UI deps are installed once -->
  <Target Name="NpmInstall" BeforeTargets="Build"
          Condition="Exists('$(ProjectDir)\UI\package.json') AND !Exists('$(ProjectDir)\UI\node_modules')">
    <Message Text="ART UI: npm ci (first-time install)..." Importance="high" />
    <Exec Command="$(NpmCmd) ci" WorkingDirectory="$(ProjectDir)\UI" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="NpmCiExit" />
    </Exec>
    <Error Condition="'$(FailUIBuild)'=='true' AND '$(NpmCiExit)' != '0'"
           Text="ART UI: 'npm ci' failed (exit $(NpmCiExit)). See Output window for details." />
    <Warning Condition="'$(FailUIBuild)'!='true' AND '$(NpmCiExit)' != '0'"
             Text="ART UI: 'npm ci' failed (exit $(NpmCiExit)). Continuing C# build." />
  </Target>

  <!-- Build UI bundle (soft-fail by default so icons still ship) -->
  <Target Name="BuildUI" AfterTargets="AfterBuild"
          Condition="Exists('$(ProjectDir)\UI\package.json')">
    <Message Text="ART UI: npm run build..." Importance="high" />
    <Exec Command="$(NpmCmd) run build" WorkingDirectory="$(ProjectDir)\UI" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="NpmBuildExit" />
    </Exec>
    <Error Condition="'$(FailUIBuild)'=='true' AND '$(NpmBuildExit)' != '0'"
           Text="ART UI: 'npm run build' failed (exit $(NpmBuildExit))." />
    <Warning Condition="'$(FailUIBuild)'!='true' AND '$(NpmBuildExit)' != '0'"
             Text="ART UI: 'npm run build' failed (exit $(NpmBuildExit)). Continuing C# build." />
  </Target>

  <!-- Keep lang/** copied (localization files) -->
  <ItemGroup>
    <Folder Include="lang\" />
    <Content Include="lang\**">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
</Project>
